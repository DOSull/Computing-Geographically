{
  "hash": "bee1e07fb20952435af753ee061c37aa",
  "result": {
    "markdown": "---\ntitle: \"Figure 8.4: The game of life CA\"\ncategories: \n  - figures\n  - code\n  - R\nexecute: \n  cache: true\n  freeze: auto\nknitr:\n  opts_chunk: \n    warning: false\n    message: false\n---\n\n\nThe example in the book was made using a NetLogo model based on [this model from _Spatial Simulation_](https://dosull.github.io/pattern-and-process/chapter-1/1.1.html), but this page provides _R_ code instead.\n\n\n::: {.cell hash='fig8-03-game-of-life_cache/html/unnamed-chunk-1_bae48a081521958237b32d64f90091cb'}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(gsignal)\nlibrary(pracma)\nlibrary(data.table)\nlibrary(ggplot2)\n```\n:::\n\n\n## Model code\nThe model code is in the cell below. It returns a 3D array of cell states, with each 'layer' a new 2D array of cell states.\n\n\n::: {.cell hash='fig8-03-game-of-life_cache/html/unnamed-chunk-2_5a30906b62fc3b2956f92358563bc7c5'}\n\n```{.r .cell-code  code-fold=\"true\"}\n# random neighbour offset\nk <- matrix(c(1, 1, 1,\n              1, 0, 1,\n              1, 1, 1), 3, 3)\n\nwrap_matrix <- function(m) {\n  nr <- nrow(m)\n  nc <- ncol(m)\n  m2 <- pracma::repmat(m, 3, 3)\n  m2[0:(nr + 1) + nr, 0:(nc + 1) + nc]\n}\n\ngeneration <- function(m) {\n  nr <- nrow(m)\n  nc <- ncol(m)\n  live <- wconv(\"2d\", wrap_matrix(m), k, \"same\")[1:nr + 1, 1:nc + 1]\n  next_m <- zeros(nr, nc)\n  next_m[which(m == 1 & live %in% 2:3 | m == 0 & live == 3)] <- 1\n  next_m\n}\n\ninit_state <- function(density = 0.35, nr, nc) {\n  matrix(as.numeric(runif(nr * nc) < density),\n         ncol = nc, nrow = nr)\n}\n\nlife <- function(nc = 20, nr = 20, tmax = 20, \n                 density = 0.35, seed = NULL) {\n  set.seed(seed)\n  result <- array(0, dim = c(nr, nc, tmax))\n  result[, , 1] <- init_state(density = density, \n                              nr = nr, nc = nc)\n  for (gen in 2:tmax) {\n    result[, , gen] <- generation(result[, , gen - 1])\n  }\n  result\n}\n```\n:::\n\n\n## Run the model\nWe run the model and convert it into a  dataframe to make it easier to plot.\n\n\n::: {.cell hash='fig8-03-game-of-life_cache/html/unnamed-chunk-3_c59449685b4da10550de3de514c89be3'}\n\n```{.r .cell-code}\ninitial_density <- 0.35\nwidth <- 50\nheight <- 50\ntime_steps <- 200\n\nlife_df <- life(nr = height, nc = width, tmax = time_steps, \n                density = initial_density) %>%\n  as.data.table() %>%\n  as_tibble() %>%\n  rename(x = V1, y = V2, t = V3, num = value)\n```\n:::\n\n\n## Plotting\nThe dataframe has attributes `x`, `y`, `t`, and `state`, which are most easily plotted as a sequence of model snapshots using `ggplot2::facet_wrap`.\n\n\n::: {.cell hash='fig8-03-game-of-life_cache/html/unnamed-chunk-4_3cfad6c2fc56faa4be895ef29534bf50'}\n\n```{.r .cell-code}\nggplot(life_df %>% dplyr::filter(t >= 30, t <= 47)) + \n  geom_raster(aes(x = x, y = y, fill = num), show.legend = FALSE) + \n  coord_equal() +\n  facet_wrap( ~ t, ncol = 6) +\n  theme_void() + \n  theme(strip.background = element_blank(),\n        strip.text.x = element_blank())\n```\n\n::: {.cell-output-display}\n![](fig8-03-game-of-life_files/figure-html/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n### An animation\nWe can also make a movie...\n\n\n::: {.cell hash='fig8-03-game-of-life_cache/html/unnamed-chunk-5_4634ebb7e8af325a8231385faba781b2'}\n\n```{.r .cell-code}\nlibrary(gganimate)\n\nanim <- ggplot(life_df) + \n  geom_raster(aes(x = x, y = y, fill = num), show.legend = FALSE) + \n  coord_equal() +\n  transition_manual(t) + \n  labs(title = \"Step: {frame}\") +\n  theme_void()\n        \nanimate(anim, nframes = 100, fps = 5)\n```\n\n::: {.cell-output-display}\n![](fig8-03-game-of-life_files/figure-html/unnamed-chunk-5-1.gif)\n:::\n:::\n\n::: {.cell hash='fig8-03-game-of-life_cache/html/unnamed-chunk-6_be7df6a22f34dbc67a5f719319b63f40'}\n\n```{.r .cell-code  code-fold=\"true\"}\n# License (MIT)\n#\n# Copyright (c) 2023 David O'Sullivan\n#\n# Permission is hereby granted, free of charge, to any person\n# obtaining a copy of this software and associated documentation\n# files (the \"Software\"), to deal in the Software without restriction,\n# including without limitation the rights to use, copy, modify, merge,\n# publish, distribute, sublicense, and/or sell copies of the Software,\n# and to  permit persons to whom the Software is furnished to do so,\n# subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included\n# in all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n# DEALINGS IN THE SOFTWARE.\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}