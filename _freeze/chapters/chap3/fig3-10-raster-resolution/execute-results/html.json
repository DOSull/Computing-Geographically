{
  "hash": "2418e48367214465103bdb45844b33be",
  "result": {
    "markdown": "---\ntitle: \"Figure 3.10: Raster aggregation and disaggregation\"\nexecute: \n  cache: true\n  freeze: auto\n---\n\n\nThis figure shows how you can't recover raster information after aggregation.\n\n\n::: {.cell hash='fig3-10-raster-resolution_cache/html/unnamed-chunk-1_91ba1caabc20b30b21985c93b63f898d'}\n\n```{.r .cell-code}\nlibrary(terra)\nlibrary(tmap)\nlibrary(dplyr)\n```\n:::\n\n\nGet the data&mdash;you'll need some of your own data here.\n\n\n::: {.cell hash='fig3-10-raster-resolution_cache/html/unnamed-chunk-2_a0c815d276cee0fdd3d91571e884c7f2'}\n\n```{.r .cell-code}\nz <- rast(\"raster-data.tif\")\n```\n:::\n\n\nAggregate and disaggregate by 10\n\n\n::: {.cell hash='fig3-10-raster-resolution_cache/html/unnamed-chunk-3_fb3e54510a81e90d637e18f511c665bc'}\n\n```{.r .cell-code}\nz10 <- z %>% \n  aggregate(10)\n\nz_dash <- z10 %>%\n  resample(z)\n```\n:::\n\n\nDissolve to polygons, so we can make smaller image files and control the colouring. This step is **slow**.\n\n\n::: {.cell hash='fig3-10-raster-resolution_cache/html/unnamed-chunk-4_5f86eb06dce49e537e95c86348443b12'}\n\n```{.r .cell-code}\nz_p <- z %>%\n  as.polygons(dissolve = FALSE) %>%\n  as(\"Spatial\")\n\nz10_p <- z10 %>%\n  as.polygons(dissolve = FALSE) %>%\n  as(\"Spatial\")\n\nz_dash_p <- z_dash %>%\n  as.polygons(dissolve = FALSE) %>%\n  as(\"Spatial\")\n```\n:::\n\n\nMake maps\n\n\n::: {.cell hash='fig3-10-raster-resolution_cache/html/unnamed-chunk-5_dc3704e87a5f007d3898c96d308f7f4a'}\n\n```{.r .cell-code}\nm1 <- tm_shape(z_p) + \n  tm_fill(col = \"Band 1\", breaks = seq(180, 280, 10), \n          palette = \"Greys\", style = \"fixed\") + \n  tm_legend(show = FALSE) + \n  tm_layout(inner.margins = 0, frame = FALSE)\n\nm2 <- tm_shape(z10_p) + \n  tm_fill(col = \"Band 1\", breaks = seq(180, 280, 10), \n          palette = \"Greys\", style = \"fixed\") + \n  tm_legend(show = FALSE) + \n  tm_layout(inner.margins = 0, frame = FALSE)\n\nm3 <- tm_shape(z_dash_p) + \n  tm_fill(col = \"Band 1\", breaks = seq(180, 280, 10), \n          palette = \"Greys\", style = \"fixed\") + \n  tm_legend(show = FALSE) + \n  tm_layout(inner.margins = 0, frame = FALSE)\n\ntmap_arrange(m1, m2, m3)\n```\n\n::: {.cell-output-display}\n![](fig3-10-raster-resolution_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='fig3-10-raster-resolution_cache/html/unnamed-chunk-6_5572267833420af6344202ace8ecfe7c'}\n\n```{.r .cell-code  code-fold=\"true\"}\n# License (MIT)\n#\n# Copyright (c) 2023 David O'Sullivan\n#\n# Permission is hereby granted, free of charge, to any person\n# obtaining a copy of this software and associated documentation\n# files (the \"Software\"), to deal in the Software without restriction,\n# including without limitation the rights to use, copy, modify, merge,\n# publish, distribute, sublicense, and/or sell copies of the Software,\n# and to  permit persons to whom the Software is furnished to do so,\n# subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included\n# in all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n# DEALINGS IN THE SOFTWARE.\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}