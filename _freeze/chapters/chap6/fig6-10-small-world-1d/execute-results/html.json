{
  "hash": "0c389690acb49405a5216dfc095d022a",
  "result": {
    "markdown": "---\ntitle: \"Figure 6.10: The small world rewiring process\"\ncategories: \n  - figures\n  - code\n  - R\nexecute: \n  cache: true\n  freeze: auto\nknitr:\n  opts_chunk: \n    warning: false\n    message: false\n---\n\n\nThe figure in the book shows only three rewiring steps for the sake of space. Here we show 11 with a probability of rewiring at each step of 0.05.\n\n\n::: {.cell hash='fig6-10-small-world-1d_cache/html/unnamed-chunk-1_d8d8939ec23c09db7b3e71f831e7e7a5'}\n\n```{.r .cell-code}\nlibrary(sf)\nlibrary(dplyr)\nlibrary(tmap)\nlibrary(igraph)\n\nplot_graph <- function(G, main='', vertex.color='black') {\n  plot(G, main = main,\n       layout = layout.circle(G), \n       vertex.label = NA, vertex.color = vertex.color, vertex.size = 5, \n       vertex.shape = 'circle', vertex.lwd = 0, \n       edge.color = 'black', edge.width = 0.5)\n}\n\npar(mar = rep(1, 4))\nlayout(matrix(1:12, nrow = 3, byrow = TRUE))\n\nthe_graph <- make_lattice(50, dim = 1, circular = TRUE)\nplot_graph(the_graph)\n\nfor (i in 1:11) {\n  the_graph <- rewire(the_graph, each_edge(0.05))\n  plot_graph(the_graph)\n}\n```\n\n::: {.cell-output-display}\n![](fig6-10-small-world-1d_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='fig6-10-small-world-1d_cache/html/unnamed-chunk-2_b3ec24c229bcc60da5c7f3d86b59b3e5'}\n\n```{.r .cell-code  code-fold=\"true\"}\n# License (MIT)\n#\n# Copyright (c) 2023 David O'Sullivan\n#\n# Permission is hereby granted, free of charge, to any person\n# obtaining a copy of this software and associated documentation\n# files (the \"Software\"), to deal in the Software without restriction,\n# including without limitation the rights to use, copy, modify, merge,\n# publish, distribute, sublicense, and/or sell copies of the Software,\n# and to  permit persons to whom the Software is furnished to do so,\n# subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included\n# in all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n# DEALINGS IN THE SOFTWARE.\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}