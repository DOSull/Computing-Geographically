{
  "hash": "bbd8f54d4e991efc94507266fda8eea4",
  "result": {
    "markdown": "---\ntitle: \"Figures 2.6 Slivers and gaps in a polygon layer\"\ncategories: \n  - code\n  - R\n  - extra\nexecute: \n  cache: true\n  freeze: auto\nknitr:\n  opts_chunk: \n    warning: false\n    message: false\n---\n\n\nHere is how slivers and gaps can happen...\n\nRead in some polygons.\n\n\n::: {.cell hash='fig2-06-slivers-and-gaps_cache/html/unnamed-chunk-1_3abfc1e563e69e34fc15dadeaa6c8629'}\n\n```{.r .cell-code}\nlibrary(sf)\nlibrary(tmap)\nlibrary(dplyr)\n\npolygons <- st_read(\"some-polygons.gpkg\")\n```\n:::\n\n\nSimplify them without due care and attention, and _voila_! \n\n\n::: {.cell hash='fig2-06-slivers-and-gaps_cache/html/unnamed-chunk-2_4f3aa1664e6c1b6626567139e9075794'}\n\n```{.r .cell-code}\nm1 <- tm_shape(polygons) +\n  tm_fill(col = \"name\", alpha = 0.5) +\n  tm_layout(\n    title = \"Source polygons\", frame = FALSE,\n    legend.show = FALSE)\n\nm2 <- tm_shape(polygons %>% \n                 st_simplify(dTolerance = 100)) +\n  tm_fill(col = \"name\", alpha = 0.5) +\n  tm_layout(\n    title = \"Source polygons\", frame = FALSE,\n    legend.show = FALSE)\n\ntmap_arrange(m1, m2, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](fig2-06-slivers-and-gaps_files/figure-html/unnamed-chunk-2-1.png){width=768}\n:::\n:::\n\n\nBy contrast if we use the simplification function from `rmapshaper` topology is preserved, even with pretty dramatic simplification (here retaining only 25% of polygon vertices.)\n\n\n::: {.cell hash='fig2-06-slivers-and-gaps_cache/html/unnamed-chunk-3_aef0b3383eacb5003c397d6dcb16a21d'}\n\n```{.r .cell-code}\nlibrary(rmapshaper)\n\nm3 <- tm_shape(polygons %>% ms_simplify(keep = 0.25)) +\n  tm_fill(col = \"name\", alpha = 0.5) +\n  tm_layout(\n    title = \"Topology preserved\", frame = FALSE,\n    legend.show = FALSE)\n\ntmap_arrange(m1, m3, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](fig2-06-slivers-and-gaps_files/figure-html/unnamed-chunk-3-1.png){width=768}\n:::\n:::\n\n\nThe `rmapshaper::topojson_write` function also allows you to write your polygons out to the topology preserving [TopoJSON format](https://github.com/topojson/topojson).\n\n`rmapshaper` is associated with the excellent [MapShaper tool](http://www.mapshaper.org/).\n\n\n::: {.cell hash='fig2-06-slivers-and-gaps_cache/html/unnamed-chunk-4_c599ef6811ed2ff82ac2493439b5a062'}\n\n```{.r .cell-code  code-fold=\"true\"}\n# License (MIT)\n#\n# Copyright (c) 2023 David O'Sullivan\n#\n# Permission is hereby granted, free of charge, to any person\n# obtaining a copy of this software and associated documentation\n# files (the \"Software\"), to deal in the Software without restriction,\n# including without limitation the rights to use, copy, modify, merge,\n# publish, distribute, sublicense, and/or sell copies of the Software,\n# and to  permit persons to whom the Software is furnished to do so,\n# subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included\n# in all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n# DEALINGS IN THE SOFTWARE.\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}